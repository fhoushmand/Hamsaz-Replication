State: TYPE = [# balance: INT #];
withdraw: (State, INT) -> State = LAMBDA(state: State, a: INT) : 
(# balance := (state.balance - a) #);
g_withdraw: (State, INT) -> BOOLEAN = LAMBDA(state: State, a: INT) : 
(a > 0);
deposit: (State, INT) -> State = LAMBDA(state: State, a: INT) : 
(# balance := (state.balance + a) #);
g_deposit: (State, INT) -> BOOLEAN = LAMBDA(state: State, a: INT) : 
(a > 0);
query: (State) -> State = LAMBDA(state: State) : 
state;
g_query: (State) -> BOOLEAN = LAMBDA(state: State) : 
TRUE;
I: (State) -> BOOLEAN = LAMBDA(state: State) : 
(state.balance > 0);
state: State;

a8: INT;


a9: INT;

ASSERT NOT((g_deposit(state,a8) AND g_deposit(state,a9)) => (g_deposit(deposit(state,a8),a9) AND g_deposit(deposit(state,a9),a8) AND (deposit(deposit(state,a9),a8) = deposit(deposit(state,a8),a9))));

CHECKSAT;