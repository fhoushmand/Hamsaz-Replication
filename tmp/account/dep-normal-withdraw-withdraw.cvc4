State: TYPE = [# balance: INT #];
withdraw: (State, INT) -> State = LAMBDA(state: State, a: INT) : 
(# balance := (state.balance - a) #);
g_withdraw: (State, INT) -> BOOLEAN = LAMBDA(state: State, a: INT) : 
(a > 0);
deposit: (State, INT) -> State = LAMBDA(state: State, a: INT) : 
(# balance := (state.balance + a) #);
g_deposit: (State, INT) -> BOOLEAN = LAMBDA(state: State, a: INT) : 
(a > 0);
query: (State) -> State = LAMBDA(state: State) : 
state;
g_query: (State) -> BOOLEAN = LAMBDA(state: State) : 
TRUE;
I: (State) -> BOOLEAN = LAMBDA(state: State) : 
(state.balance > 0);
state: State;

a25: INT;


a26: INT;

ASSERT NOT((g_withdraw(withdraw(state,a25),a26) AND I(withdraw(withdraw(state,a25),a26)) AND g_withdraw(state,a25)) =>  (g_withdraw(state,a26) AND I(withdraw(state,a26)))); 

CHECKSAT;